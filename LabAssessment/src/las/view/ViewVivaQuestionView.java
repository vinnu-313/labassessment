/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package las.view;

import java.net.UnknownHostException;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Collection;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import las.config.ServerConfiguration;
import las.rmi.LASServer;

/**
 *
 * @author santu
 */
public class ViewVivaQuestionView extends javax.swing.JFrame {

    /**
     * Creates new form ViewVivaQuestionView
     */
    public ViewVivaQuestionView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlelabel = new javax.swing.JLabel();
        titleSeperator = new javax.swing.JSeparator();
        questionTabPane = new javax.swing.JTabbedPane();
        question1Pane = new javax.swing.JPanel();
        question1Label = new javax.swing.JLabel();
        question1Scroll = new javax.swing.JScrollPane();
        question1TextArea = new javax.swing.JTextArea();
        Save1Button = new javax.swing.JButton();
        Reset1Button = new javax.swing.JButton();
        question2Pane = new javax.swing.JPanel();
        question2Label = new javax.swing.JLabel();
        question2Scroll = new javax.swing.JScrollPane();
        question2TextArea = new javax.swing.JTextArea();
        Save2Button = new javax.swing.JButton();
        Reset2Button = new javax.swing.JButton();
        question3Pane = new javax.swing.JPanel();
        question3Label = new javax.swing.JLabel();
        question3Scroll = new javax.swing.JScrollPane();
        question3TextArea = new javax.swing.JTextArea();
        Save3Button = new javax.swing.JButton();
        Reset3Button = new javax.swing.JButton();
        question4Pane = new javax.swing.JPanel();
        question4Label = new javax.swing.JLabel();
        question4Scroll = new javax.swing.JScrollPane();
        question4TextArea = new javax.swing.JTextArea();
        Save4Button = new javax.swing.JButton();
        Reset4Button = new javax.swing.JButton();
        question5Pane = new javax.swing.JPanel();
        question5Label = new javax.swing.JLabel();
        question5Scroll = new javax.swing.JScrollPane();
        question5TextArea = new javax.swing.JTextArea();
        Save5Button = new javax.swing.JButton();
        Reset5Button = new javax.swing.JButton();
        question6Pane = new javax.swing.JPanel();
        question6Label = new javax.swing.JLabel();
        question6Scroll = new javax.swing.JScrollPane();
        question6TextArea = new javax.swing.JTextArea();
        Save6Button = new javax.swing.JButton();
        Reset6Button = new javax.swing.JButton();
        question7Pane = new javax.swing.JPanel();
        question7Label = new javax.swing.JLabel();
        question7Scroll = new javax.swing.JScrollPane();
        question7TextArea = new javax.swing.JTextArea();
        Save7Button = new javax.swing.JButton();
        Reset7Button = new javax.swing.JButton();
        question8Pane = new javax.swing.JPanel();
        question8Label = new javax.swing.JLabel();
        question8Scroll = new javax.swing.JScrollPane();
        question8TextArea = new javax.swing.JTextArea();
        Save8Button = new javax.swing.JButton();
        Reset8Button = new javax.swing.JButton();
        question9Pane = new javax.swing.JPanel();
        question9Label = new javax.swing.JLabel();
        question9Scroll = new javax.swing.JScrollPane();
        question9TextArea = new javax.swing.JTextArea();
        Save9Button = new javax.swing.JButton();
        Reset9Button = new javax.swing.JButton();
        question10Pane = new javax.swing.JPanel();
        question10Label = new javax.swing.JLabel();
        question10Scroll = new javax.swing.JScrollPane();
        question10TextArea = new javax.swing.JTextArea();
        Save10Button = new javax.swing.JButton();
        Reset10Button = new javax.swing.JButton();
        SaveAllButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lab Assessment System v1.0b");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        titlelabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titlelabel.setForeground(new java.awt.Color(51, 102, 255));
        titlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlelabel.setText("Viva Questions - Lab Assessment System v1.0b");

        question1Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question1Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question1TextArea.setColumns(20);
        question1TextArea.setRows(5);
        question1Scroll.setViewportView(question1TextArea);

        Save1Button.setText("Save");
        Save1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save1ButtonActionPerformed(evt);
            }
        });

        Reset1Button.setText("Reset");
        Reset1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset1ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question1PaneLayout = new javax.swing.GroupLayout(question1Pane);
        question1Pane.setLayout(question1PaneLayout);
        question1PaneLayout.setHorizontalGroup(
            question1PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question1PaneLayout.createSequentialGroup()
                .addGroup(question1PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question1PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question1PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question1Scroll)
                            .addComponent(question1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question1PaneLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(Save1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(Reset1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 259, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question1PaneLayout.setVerticalGroup(
            question1PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question1PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question1Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(question1PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 1", question1Pane);

        question2Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question2Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question2TextArea.setColumns(20);
        question2TextArea.setRows(5);
        question2Scroll.setViewportView(question2TextArea);

        Save2Button.setText("Save");
        Save2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save2ButtonActionPerformed(evt);
            }
        });

        Reset2Button.setText("Reset");
        Reset2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset2ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question2PaneLayout = new javax.swing.GroupLayout(question2Pane);
        question2Pane.setLayout(question2PaneLayout);
        question2PaneLayout.setHorizontalGroup(
            question2PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question2PaneLayout.createSequentialGroup()
                .addGroup(question2PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question2PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question2PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question2Scroll)
                            .addComponent(question2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question2PaneLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(Save2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(Reset2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 250, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question2PaneLayout.setVerticalGroup(
            question2PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question2PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question2Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question2PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save2Button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(Reset2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 2", question2Pane);

        question3Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question3Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question3TextArea.setColumns(20);
        question3TextArea.setRows(5);
        question3Scroll.setViewportView(question3TextArea);

        Save3Button.setText("Save");
        Save3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save3ButtonActionPerformed(evt);
            }
        });

        Reset3Button.setText("Reset");
        Reset3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset3ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question3PaneLayout = new javax.swing.GroupLayout(question3Pane);
        question3Pane.setLayout(question3PaneLayout);
        question3PaneLayout.setHorizontalGroup(
            question3PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question3PaneLayout.createSequentialGroup()
                .addGroup(question3PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question3PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question3PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question3Scroll)
                            .addComponent(question3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question3PaneLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(Save3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(Reset3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 267, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question3PaneLayout.setVerticalGroup(
            question3PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question3PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question3Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question3PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 3", question3Pane);

        question4Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question4Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question4TextArea.setColumns(20);
        question4TextArea.setRows(5);
        question4Scroll.setViewportView(question4TextArea);

        Save4Button.setText("Save");
        Save4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save4ButtonActionPerformed(evt);
            }
        });

        Reset4Button.setText("Reset");
        Reset4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset4ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question4PaneLayout = new javax.swing.GroupLayout(question4Pane);
        question4Pane.setLayout(question4PaneLayout);
        question4PaneLayout.setHorizontalGroup(
            question4PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question4PaneLayout.createSequentialGroup()
                .addGroup(question4PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question4PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question4PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question4Scroll)
                            .addComponent(question4Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question4PaneLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(Save4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(Reset4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 268, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question4PaneLayout.setVerticalGroup(
            question4PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question4PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question4Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question4PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 4", question4Pane);

        question5Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question5Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question5TextArea.setColumns(20);
        question5TextArea.setRows(5);
        question5Scroll.setViewportView(question5TextArea);

        Save5Button.setText("Save");
        Save5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save5ButtonActionPerformed(evt);
            }
        });

        Reset5Button.setText("Reset");
        Reset5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset5ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question5PaneLayout = new javax.swing.GroupLayout(question5Pane);
        question5Pane.setLayout(question5PaneLayout);
        question5PaneLayout.setHorizontalGroup(
            question5PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question5PaneLayout.createSequentialGroup()
                .addGroup(question5PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question5PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question5PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question5Scroll)
                            .addComponent(question5Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question5PaneLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(Save5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(Reset5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 209, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question5PaneLayout.setVerticalGroup(
            question5PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question5PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question5Label, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question5Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(question5PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Save5Button, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(Reset5Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        questionTabPane.addTab("Question 5", question5Pane);

        question6Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question6Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question6TextArea.setColumns(20);
        question6TextArea.setRows(5);
        question6Scroll.setViewportView(question6TextArea);

        Save6Button.setText("Save");
        Save6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save6ButtonActionPerformed(evt);
            }
        });

        Reset6Button.setText("Reset");
        Reset6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset6ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question6PaneLayout = new javax.swing.GroupLayout(question6Pane);
        question6Pane.setLayout(question6PaneLayout);
        question6PaneLayout.setHorizontalGroup(
            question6PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question6PaneLayout.createSequentialGroup()
                .addGroup(question6PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question6PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question6PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question6Scroll)
                            .addComponent(question6Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question6PaneLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(Save6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(Reset6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 242, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question6PaneLayout.setVerticalGroup(
            question6PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question6PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question6Label, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(question6Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(question6PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset6Button, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 6", question6Pane);

        question7Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question7Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question7TextArea.setColumns(20);
        question7TextArea.setRows(5);
        question7Scroll.setViewportView(question7TextArea);

        Save7Button.setText("Save");
        Save7Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save7ButtonActionPerformed(evt);
            }
        });

        Reset7Button.setText("Reset");
        Reset7Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset7ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question7PaneLayout = new javax.swing.GroupLayout(question7Pane);
        question7Pane.setLayout(question7PaneLayout);
        question7PaneLayout.setHorizontalGroup(
            question7PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question7PaneLayout.createSequentialGroup()
                .addGroup(question7PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question7PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question7PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question7Scroll)
                            .addComponent(question7Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question7PaneLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(Save7Button, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(Reset7Button, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 215, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question7PaneLayout.setVerticalGroup(
            question7PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question7PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question7Label, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question7Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question7PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save7Button, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset7Button, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 7", question7Pane);

        question8Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question8Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question8TextArea.setColumns(20);
        question8TextArea.setRows(5);
        question8Scroll.setViewportView(question8TextArea);

        Save8Button.setText("Save");
        Save8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save8ButtonActionPerformed(evt);
            }
        });

        Reset8Button.setText("Reset");
        Reset8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset8ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question8PaneLayout = new javax.swing.GroupLayout(question8Pane);
        question8Pane.setLayout(question8PaneLayout);
        question8PaneLayout.setHorizontalGroup(
            question8PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question8PaneLayout.createSequentialGroup()
                .addGroup(question8PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question8PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question8PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question8Scroll)
                            .addComponent(question8Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question8PaneLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(Save8Button, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(Reset8Button, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 205, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question8PaneLayout.setVerticalGroup(
            question8PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question8PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question8Label, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question8Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question8PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save8Button, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset8Button, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 8", question8Pane);

        question9Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question9Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question9TextArea.setColumns(20);
        question9TextArea.setRows(5);
        question9Scroll.setViewportView(question9TextArea);

        Save9Button.setText("Save");
        Save9Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save9ButtonActionPerformed(evt);
            }
        });

        Reset9Button.setText("Reset");
        Reset9Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset9ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question9PaneLayout = new javax.swing.GroupLayout(question9Pane);
        question9Pane.setLayout(question9PaneLayout);
        question9PaneLayout.setHorizontalGroup(
            question9PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question9PaneLayout.createSequentialGroup()
                .addGroup(question9PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question9PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question9PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question9Scroll)
                            .addComponent(question9Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question9PaneLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Save9Button, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(Reset9Button, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question9PaneLayout.setVerticalGroup(
            question9PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question9PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question9Label, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question9Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(question9PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save9Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset9Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 9", question9Pane);

        question10Label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        question10Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        question10TextArea.setColumns(20);
        question10TextArea.setRows(5);
        question10Scroll.setViewportView(question10TextArea);

        Save10Button.setText("Save");
        Save10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save10ButtonActionPerformed(evt);
            }
        });

        Reset10Button.setText("Reset");
        Reset10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset10ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question10PaneLayout = new javax.swing.GroupLayout(question10Pane);
        question10Pane.setLayout(question10PaneLayout);
        question10PaneLayout.setHorizontalGroup(
            question10PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question10PaneLayout.createSequentialGroup()
                .addGroup(question10PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question10PaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(question10PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(question10Scroll, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(question10Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(question10PaneLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Save10Button, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(Reset10Button, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 254, Short.MAX_VALUE)))
                .addContainerGap())
        );
        question10PaneLayout.setVerticalGroup(
            question10PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question10PaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question10Label, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question10Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question10PaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save10Button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset10Button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        questionTabPane.addTab("Question 10", question10Pane);

        SaveAllButton.setText("Cancel");
        SaveAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAllButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Save All");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionTabPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titlelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleSeperator, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(SaveAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleSeperator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (ClientView.getUser().getUname() == null) {
            JOptionPane.showMessageDialog(null, "Kindly login to view Questions !", "Login required !", JOptionPane.WARNING_MESSAGE);
            this.dispose();
        } else {
            try {
                Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
                LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
                Collection<String[]> questions = lASServer.getVivaQuestions(ClientView.getUser().getUname());
                if (questions == null) {
                    JOptionPane.showMessageDialog(rootPane, "Insufficient Questions, Contact Administrator !");
                } else {
                    Iterator it = questions.iterator();
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 1 : " + question[0]);
                        question1Label.setText(question[0]);
                        Save1Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 2 : " + question1[0]);
                        question2Label.setText(question[0]);
                        Save2Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 3 : " + question2[0]);
                        question3Label.setText(question[0]);
                        Save3Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 4 : " + question[0]);
                        question4Label.setText(question[0]);
                        Save4Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 5 : " + question[0]);
                        question5Label.setText(question[0]);
                        Save5Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 6 : " + question[0]);
                        question6Label.setText(question[0]);
                        Save6Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 7 : " + question[0]);
                        question7Label.setText(question[0]);
                        Save7Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 8 : " + question[0]);
                        question8Label.setText(question[0]);
                        Save8Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 9 : " + question[0]);
                        question9Label.setText(question[0]);
                        Save9Button.setActionCommand(question[1]);
                    }
                    if (it.hasNext()) {
                        String[] question = (String[]) it.next();
//                        System.out.println("Question 10 : " + question[0]);
                        question10Label.setText(question[0]);
                        Save10Button.setActionCommand(question[1]);
                    }

                }
            } catch (NotBoundException ex) {
                Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AccessException ex) {
                Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnknownHostException ex) {
                Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void Save1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save1ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question1TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save1ButtonActionPerformed

    private void Save2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save2ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question2TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save2ButtonActionPerformed

    private void Save3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save3ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question3TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save3ButtonActionPerformed

    private void Save4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save4ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question4TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_Save4ButtonActionPerformed

    private void Save5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save5ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question5TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save5ButtonActionPerformed

    private void Save6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save6ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question6TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save6ButtonActionPerformed

    private void Save7ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save7ButtonActionPerformed
        try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question7TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save7ButtonActionPerformed

    private void Save8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save8ButtonActionPerformed
         try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question8TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save8ButtonActionPerformed

    private void Save9ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save9ButtonActionPerformed
         try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question9TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save9ButtonActionPerformed

    private void Save10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save10ButtonActionPerformed
         try {
            Registry registry = LocateRegistry.getRegistry(ServerConfiguration.getInetAddress().getHostAddress(), ServerConfiguration.getPort());
            LASServer lASServer = (LASServer) registry.lookup("LAS_SERVER");
            lASServer.saveAnswer(ClientView.getUser().getUname(), Integer.parseInt(evt.getActionCommand()), question10TextArea.getText());
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ViewVivaQuestionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Save10ButtonActionPerformed

    private void SaveAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAllButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_SaveAllButtonActionPerformed

    private void Reset1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset1ButtonActionPerformed
        question1TextArea.setText("");
    }//GEN-LAST:event_Reset1ButtonActionPerformed

    private void Reset2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset2ButtonActionPerformed
        question2TextArea.setText("");
    }//GEN-LAST:event_Reset2ButtonActionPerformed

    private void Reset3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset3ButtonActionPerformed
        question3TextArea.setText("");
    }//GEN-LAST:event_Reset3ButtonActionPerformed

    private void Reset4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset4ButtonActionPerformed
        question4TextArea.setText("");
    }//GEN-LAST:event_Reset4ButtonActionPerformed

    private void Reset5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset5ButtonActionPerformed
        question5TextArea.setText("");
    }//GEN-LAST:event_Reset5ButtonActionPerformed

    private void Reset6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset6ButtonActionPerformed
        question6TextArea.setText("");
    }//GEN-LAST:event_Reset6ButtonActionPerformed

    private void Reset7ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset7ButtonActionPerformed
        question7TextArea.setText("");
    }//GEN-LAST:event_Reset7ButtonActionPerformed

    private void Reset8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset8ButtonActionPerformed
        question8TextArea.setText("");
    }//GEN-LAST:event_Reset8ButtonActionPerformed

    private void Reset9ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset9ButtonActionPerformed
        question9TextArea.setText("");
    }//GEN-LAST:event_Reset9ButtonActionPerformed

    private void Reset10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset10ButtonActionPerformed
        question10TextArea.setText("");
    }//GEN-LAST:event_Reset10ButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        Save1Button.doClick();
        Save2Button.doClick();
        Save3Button.doClick();
        Save4Button.doClick();
        Save5Button.doClick();
        Save6Button.doClick();
        Save7Button.doClick();
        Save8Button.doClick();
        Save9Button.doClick();
        Save10Button.doClick();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVivaQuestionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVivaQuestionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVivaQuestionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVivaQuestionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ViewVivaQuestionView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton Reset10Button;
    private javax.swing.JButton Reset1Button;
    private javax.swing.JButton Reset2Button;
    private javax.swing.JButton Reset3Button;
    private javax.swing.JButton Reset4Button;
    private javax.swing.JButton Reset5Button;
    private javax.swing.JButton Reset6Button;
    private javax.swing.JButton Reset7Button;
    private javax.swing.JButton Reset8Button;
    private javax.swing.JButton Reset9Button;
    private javax.swing.JButton Save10Button;
    private javax.swing.JButton Save1Button;
    private javax.swing.JButton Save2Button;
    private javax.swing.JButton Save3Button;
    private javax.swing.JButton Save4Button;
    private javax.swing.JButton Save5Button;
    private javax.swing.JButton Save6Button;
    private javax.swing.JButton Save7Button;
    private javax.swing.JButton Save8Button;
    private javax.swing.JButton Save9Button;
    private javax.swing.JButton SaveAllButton;
    private javax.swing.JLabel question10Label;
    private javax.swing.JPanel question10Pane;
    private javax.swing.JScrollPane question10Scroll;
    private javax.swing.JTextArea question10TextArea;
    private javax.swing.JLabel question1Label;
    private javax.swing.JPanel question1Pane;
    private javax.swing.JScrollPane question1Scroll;
    private javax.swing.JTextArea question1TextArea;
    private javax.swing.JLabel question2Label;
    private javax.swing.JPanel question2Pane;
    private javax.swing.JScrollPane question2Scroll;
    private javax.swing.JTextArea question2TextArea;
    private javax.swing.JLabel question3Label;
    private javax.swing.JPanel question3Pane;
    private javax.swing.JScrollPane question3Scroll;
    private javax.swing.JTextArea question3TextArea;
    private javax.swing.JLabel question4Label;
    private javax.swing.JPanel question4Pane;
    private javax.swing.JScrollPane question4Scroll;
    private javax.swing.JTextArea question4TextArea;
    private javax.swing.JLabel question5Label;
    private javax.swing.JPanel question5Pane;
    private javax.swing.JScrollPane question5Scroll;
    private javax.swing.JTextArea question5TextArea;
    private javax.swing.JLabel question6Label;
    private javax.swing.JPanel question6Pane;
    private javax.swing.JScrollPane question6Scroll;
    private javax.swing.JTextArea question6TextArea;
    private javax.swing.JLabel question7Label;
    private javax.swing.JPanel question7Pane;
    private javax.swing.JScrollPane question7Scroll;
    private javax.swing.JTextArea question7TextArea;
    private javax.swing.JLabel question8Label;
    private javax.swing.JPanel question8Pane;
    private javax.swing.JScrollPane question8Scroll;
    private javax.swing.JTextArea question8TextArea;
    private javax.swing.JLabel question9Label;
    private javax.swing.JPanel question9Pane;
    private javax.swing.JScrollPane question9Scroll;
    private javax.swing.JTextArea question9TextArea;
    private javax.swing.JTabbedPane questionTabPane;
    private javax.swing.JSeparator titleSeperator;
    private javax.swing.JLabel titlelabel;
    // End of variables declaration//GEN-END:variables
}
